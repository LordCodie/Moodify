/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SignUpIndexImport } from './routes/sign-up/index'
import { Route as RecommendationsIndexImport } from './routes/recommendations/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as GenerateIndexImport } from './routes/generate/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignUpIndexRoute = SignUpIndexImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

const RecommendationsIndexRoute = RecommendationsIndexImport.update({
  id: '/recommendations/',
  path: '/recommendations/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const GenerateIndexRoute = GenerateIndexImport.update({
  id: '/generate/',
  path: '/generate/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/generate/': {
      id: '/generate/'
      path: '/generate'
      fullPath: '/generate'
      preLoaderRoute: typeof GenerateIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/recommendations/': {
      id: '/recommendations/'
      path: '/recommendations'
      fullPath: '/recommendations'
      preLoaderRoute: typeof RecommendationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/generate': typeof GenerateIndexRoute
  '/login': typeof LoginIndexRoute
  '/recommendations': typeof RecommendationsIndexRoute
  '/sign-up': typeof SignUpIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/generate': typeof GenerateIndexRoute
  '/login': typeof LoginIndexRoute
  '/recommendations': typeof RecommendationsIndexRoute
  '/sign-up': typeof SignUpIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/generate/': typeof GenerateIndexRoute
  '/login/': typeof LoginIndexRoute
  '/recommendations/': typeof RecommendationsIndexRoute
  '/sign-up/': typeof SignUpIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/generate'
    | '/login'
    | '/recommendations'
    | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/generate'
    | '/login'
    | '/recommendations'
    | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/generate/'
    | '/login/'
    | '/recommendations/'
    | '/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  GenerateIndexRoute: typeof GenerateIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RecommendationsIndexRoute: typeof RecommendationsIndexRoute
  SignUpIndexRoute: typeof SignUpIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  GenerateIndexRoute: GenerateIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RecommendationsIndexRoute: RecommendationsIndexRoute,
  SignUpIndexRoute: SignUpIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/dashboard/",
        "/generate/",
        "/login/",
        "/recommendations/",
        "/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.jsx"
    },
    "/generate/": {
      "filePath": "generate/index.jsx"
    },
    "/login/": {
      "filePath": "login/index.jsx"
    },
    "/recommendations/": {
      "filePath": "recommendations/index.jsx"
    },
    "/sign-up/": {
      "filePath": "sign-up/index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
